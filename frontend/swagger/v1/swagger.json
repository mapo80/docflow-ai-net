{
  "openapi": "3.0.4",
  "info": {
    "title": "docflow-ai-net API",
    "description": "Job queue and immediate processing API",
    "contact": {
      "name": "docflow-ai",
      "url": "https://github.com/mapo80/docflow-ai-net"
    },
    "license": {
      "name": "MIT"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_List",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedJobsResponse"
                },
                "example": {
                  "page": 1,
                  "pageSize": 2,
                  "total": 2,
                  "items": [
                    {
                      "id": "00000000-0000-0000-0000-000000000001",
                      "status": "Queued",
                      "derivedStatus": "Pending",
                      "progress": 0,
                      "createdAt": "2024-01-01T00:00:00Z",
                      "updatedAt": "2024-01-01T00:00:00Z"
                    },
                    {
                      "id": "00000000-0000-0000-0000-000000000002",
                      "status": "Succeeded",
                      "derivedStatus": "Completed",
                      "progress": 100,
                      "createdAt": "2024-01-01T00:00:00Z",
                      "updatedAt": "2024-01-01T00:01:00Z"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Create",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "Execution mode: queued (default) or immediate",
            "schema": {
              "enum": [
                "queued",
                "immediate"
              ],
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Optional idempotency key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImmediateJobResponse"
                },
                "examples": {
                  "succeeded": {
                    "value": {
                      "job_id": "00000000-0000-0000-0000-000000000000",
                      "status": "Succeeded",
                      "duration_ms": 1234
                    }
                  },
                  "failed": {
                    "value": {
                      "job_id": "00000000-0000-0000-0000-000000000000",
                      "status": "Failed",
                      "error": "boom"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitAcceptedResponse"
                },
                "example": {
                  "job_id": "00000000-0000-0000-0000-000000000000",
                  "status_url": "/api/v1/jobs/{id}",
                  "dashboard_url": "/hangfire"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "413": {
            "description": "Payload Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "payload_too_large",
                  "message": "payload too large"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Seconds to wait before retrying",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "queue_full": {
                    "value": {
                      "error": "queue_full",
                      "message": "queue is full",
                      "retry_after_seconds": 60
                    }
                  },
                  "immediate_capacity": {
                    "value": {
                      "error": "immediate_capacity",
                      "message": "immediate capacity reached",
                      "retry_after_seconds": 1
                    }
                  }
                }
              }
            }
          },
          "507": {
            "description": "Insufficient Storage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/{id}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDetailResponse"
                },
                "example": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "status": "Queued",
                  "derivedStatus": "Pending",
                  "progress": 0,
                  "attempts": 0,
                  "createdAt": "2024-01-01T00:00:00Z",
                  "updatedAt": "2024-01-01T00:00:00Z",
                  "metrics": { },
                  "paths": {
                    "dir": "/data/jobs/0000",
                    "input": "/data/jobs/0000/input.pdf",
                    "output": "/data/jobs/0000/output.json",
                    "error": "/data/jobs/0000/error.txt"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "not_found",
                  "message": "job not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                },
                "example": {
                  "ok": true,
                  "status": "Cancelled"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "not_found",
                  "message": "job not found"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "conflict",
                  "message": "job already in terminal state",
                  "status": "Succeeded"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/model/switch": {
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Switch model",
        "description": "Starts downloading and activating the specified model",
        "operationId": "Model_Switch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchModelRequest"
              },
              "example": {
                "hfKey": "***",
                "modelRepo": "TheOrg/the-model",
                "modelFile": "model.gguf",
                "contextSize": 4096
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/model/status": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Model switch status",
        "description": "Gets progress for the current model switch",
        "operationId": "Model_Status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelDownloadStatus"
                },
                "example": {
                  "completed": false,
                  "percentage": 35,
                  "message": "downloading..."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Short machine readable error code.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Human readable message.",
            "nullable": true
          },
          "retryAfterSeconds": {
            "type": "integer",
            "description": "Retry hint in seconds when applicable.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Uniform error payload returned by the API."
      },
      "ImmediateJobResponse": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "duration_ms": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response returned when a job completes immediately."
      },
      "JobDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "derivedStatus": {
            "type": "string",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "attempts": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "metrics": {
            "$ref": "#/components/schemas/MetricsInfo"
          },
          "paths": {
            "$ref": "#/components/schemas/PathInfo"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Detailed job information."
      },
      "JobSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "derivedStatus": {
            "type": "string",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Summary information for a job."
      },
      "MetricsInfo": {
        "type": "object",
        "properties": {
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelDownloadStatus": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PagedJobsResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobSummary"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Paged list of jobs."
      },
      "PathInfo": {
        "type": "object",
        "properties": {
          "dir": {
            "type": "string",
            "nullable": true
          },
          "input": {
            "type": "string",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "string",
            "nullable": true
          },
          "output": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmitAcceptedResponse": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "format": "uuid"
          },
          "status_url": {
            "type": "string",
            "nullable": true
          },
          "dashboard_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response returned when a job is queued."
      },
      "SwitchModelRequest": {
        "required": [
          "hfKey",
          "modelFile",
          "modelRepo"
        ],
        "type": "object",
        "properties": {
          "hfKey": {
            "minLength": 1,
            "type": "string"
          },
          "modelRepo": {
            "minLength": 1,
            "type": "string"
          },
          "modelFile": {
            "minLength": 1,
            "type": "string"
          },
          "contextSize": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Void": {
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "Provide your API key.",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ]
}